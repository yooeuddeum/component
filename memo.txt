일반 함수면 편할 것을
"캡슐화 Encapsulation"
상당히 격식이 있는편임

1. 객체를 쓰는편 '리터럴'을 묶어쓰기 위해서
2. 무언가 기능을 하는 내부 함수 -> 외부에서 선언하고 호출해도 무방
3. 리턴을 많은 비중으로 신경쓰는편

feat : 회사가 "최신 버전" 쓸리가 없음
서비스 중지, 인력 ->
레거시 -> 모던 ->

생성자 함수 일 확률이 높음

프로그래밍 일반 -> 다른 언어를 흡수하기 용이

생성자 함수 연습

1. 내 방의 물건 객체
2. 필통 및 가방
3. 장보기 (생필품, 먹거리)

★class★ // 생성자 함수 연습 해보기

-> constructor
-> setter, getter
-> static
-> method

어떤 "상태" 인가를 판단하는 헬퍼 함수 / state,
-> 어떤 값이 들어옴
-> 어떤 상태를 기준으로
-> 값이 변경 될 수 있다